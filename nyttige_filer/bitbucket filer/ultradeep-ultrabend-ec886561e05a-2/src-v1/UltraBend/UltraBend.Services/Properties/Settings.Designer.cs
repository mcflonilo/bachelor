//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UltraBend.Services.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "17.12.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        /// <summary>
        /// Value of displacement norm, used as convergence criterion for the Newton – Rapshon iteration.
        /// </summary>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Value of displacement norm, used as convergence criterion for the Newton – Rapsho" +
            "n iteration.")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public double ToleranceNorm {
            get {
                return ((double)(this["ToleranceNorm"]));
            }
        }
        
        /// <summary>
        /// Maximum number of iterations
        /// </summary>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Maximum number of iterations")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int MaxIterations {
            get {
                return ((int)(this["MaxIterations"]));
            }
        }
        
        /// <summary>
        /// Basis increment (percentage of full load). This should be specified as ‘best estimate’ increment size based on experience.
        /// </summary>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Basis increment (percentage of full load). This should be specified as ‘best esti" +
            "mate’ increment size based on experience.")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public double BasisIncrement {
            get {
                return ((double)(this["BasisIncrement"]));
            }
        }
        
        /// <summary>
        /// Minimum increment (percentage of full load).
        /// </summary>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Minimum increment (percentage of full load).")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public double MinimumIncrement {
            get {
                return ((double)(this["MinimumIncrement"]));
            }
        }
        
        /// <summary>
        /// Maximum increment (percentage of full load).
        /// </summary>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Maximum increment (percentage of full load).")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public double MaximumIncrement {
            get {
                return ((double)(this["MaximumIncrement"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public double MaximumCurvature {
            get {
                return ((double)(this["MaximumCurvature"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Number {
            get {
                return ((int)(this["Number"]));
            }
        }
    }
}
